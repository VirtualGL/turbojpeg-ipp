OS := $(shell uname -s)
ARCH := $(shell uname -m)

platform := windows
subplatform :=
ifeq ($(OS), Linux)
 platform := linux
 ifeq ($(ARCH), ia64)
  subplatform := ia64
 endif
 ifeq ($(ARCH), x86_64)
  subplatform := 64
 endif
endif
ifeq ($(OS), Darwin)
 ifeq ($(ARCH), i386)
  platform := osxx86
 endif
endif

ifeq ($(M32), yes)
 subplatform :=
endif

# Macros which are common to all Unix platforms
VERSION := 1.04.2
BUILD := $(shell date +%Y%m%d)
ifeq ($(DEBUG), yes)
BUILD := $(BUILD)d
endif

BLDDIR = $(platform)$(subplatform)
BLDDIR32 = $(platform)
ifeq ($(DEBUG), yes)
BLDDIR := $(BLDDIR)/dbg
BLDDIR32 := $(BLDDIR32)/dbg
endif

ENAME = bin
LNAME = lib
ONAME = obj

EDIR := $(BLDDIR)/$(ENAME)
EDIR32 := $(BLDDIR32)/$(ENAME)
LDIR := $(BLDDIR)/$(LNAME)
LDIR32 := $(BLDDIR32)/$(LNAME)
ODIR := $(BLDDIR)/$(ONAME)
ODIR32 := $(BLDDIR32)/$(ONAME)

_DUMMY := $(shell mkdir -p $(EDIR))
_DUMMY2 := $(shell mkdir -p $(LDIR))
_DUMMY3 := $(shell mkdir -p $(ODIR))

RM = rm -f

# System-specific macros
include Makerules.$(platform)

CINCLUDES := -I.
CDEFINES := $(CDEFINES) -D__VERSION=\"$(VERSION)\" -D__BUILD=\"$(BUILD)\"
ifeq ($(DEBUG), yes)
CDEFINES := $(CDEFINES) -D__DEBUG__
endif
CFLAGS := $(CFLAGS) $(OPTFLAG) $(ARCHFLAG) $(CDEFINES) $(CINCLUDES)
ifneq ($(platform), windows)
LDFLAGS := $(OPTFLAG) $(ARCHFLAG) $(LDFLAGS)
endif

# This assures that the "clean" command runs even if there is a file called
# "clean" in the current directory
.PHONY : clean
